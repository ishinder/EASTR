name: Build

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - if: runner.os == 'macOS'
      run: |
        echo 'Test'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.22.0
      env:
        CIBW_BEFORE_ALL_MACOS: brew install autoconf
        CIBW_BEFORE_ALL_LINUX: yum install -y bzip2-devel || apk add --upgrade bzip2-dev || apt-get install -y libbz2-dev
        CIBW_SKIP: '*-musllinux_i686 *-manylinux_i686 pp* *musllinux*'

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
        path: ./wheelhouse/*.whl

  # build_sdist:
  #   name: Build source distribution
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: 'recursive'

  #     - name: Build sdist
  #       run: pipx run build --sdist

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: cibw-sdist
  #         path: dist/*.tar.gz

  pypi-publish:
    needs: [build_wheels]
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment:
      name: testpypi
    permissions:
      id-token: write
    steps:
    - uses: actions/download-artifact@v4
      with:
        # unpacks all CIBW artifacts into dist/
        pattern: cibw-*
        path: dist
        merge-multiple: true

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
